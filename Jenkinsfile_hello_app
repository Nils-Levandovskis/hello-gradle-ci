pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *')
    }
    parameters{
        string(name: 'VERSION', defaultValue: "${GIT_COMMIT}", description: 'Git commit sha for docker versioning')
    }
    stages {
        stage('build-app') {
            steps {
                echo "Build app git v: ${params.VERSION} commit sha: ${GIT_COMMIT}"
                sh "docker build -t nilsleva/hello-app:${params.VERSION} ."
                sh "docker push nilsleva/hello-app:${params.VERSION}"
            }
        }
        stage('deploy-dev') {
            steps {
                script {
                    deploy("dev")
                }
            }
        }
        stage('test-dev') {
            steps {
                script {
                    test("DEV")
                }            
            }
        }
        stage('deploy-prd') {
            steps {
                script {
                    deploy("prd")
                }            
            }
        }
        stage('test-prd') {
            steps {
                script {
                    test("PRD")
                }            
            }
        }
    }
}

def deploy(String environment) {
    echo "Deployment of hello-app to ${environment}"
    sh "kubectl set image deployment hello-app-${environment} hello-app-${environment}-pod=nilsleva/hello-app:${params.VERSION}"
}

def test(String environment) {
    echo "Testing of hello-app to ${environment}"
    sh "docker run --network=host -d -t --name api_test_executor_${environment} nilsleva/ubuntu_ruby_executor:${params.VERSION}"
    try {
        sh "docker exec api_test_executor_${environment} cucumber PLATFORM=${environment} --format html --out test-output/report.html"
    } finally {
        sh "docker cp api_test_executor_${environment}:/usr/src/api-tests/test-output/report.html report_${environment}.html"
        sh "docker rm -f api_test_executor_${environment}"
        publishHTML([
            allowMissing: false, 
            alwaysLinkToLastBuild: false, 
            keepAll: false, 
            reportDir: '', 
            reportFiles: "report_${environment}.html", 
            reportName: "Test Report ${environment}", 
            reportTitles: "Test Report ${environment}"
        ])
    }
}
